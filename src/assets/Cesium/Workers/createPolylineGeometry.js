define(["./when-4bbc8319","./Matrix2-fa56e6dd","./ArcType-98ec98bf","./arrayRemoveDuplicates-48046ac4","./Transforms-d150322f","./Color-09e01821","./ComponentDatatype-bfa70d4a","./Check-ba987d16","./GeometryAttribute-e8a7fd74","./GeometryAttributes-7827a6c2","./IndexDatatype-81fb2229","./PolylinePipeline-dbf73dd5","./VertexFormat-33d5a7e0","./RuntimeError-55ee6bc3","./combine-83860057","./WebGLConstants-1c8239cc","./EllipsoidGeodesic-89883ae6","./EllipsoidRhumbLine-7ae2cb99","./IntersectionTests-d4f2fcd6","./Plane-034a4517"],function(K,Q,X,Z,$,ee,te,e,re,ae,oe,ne,m,t,r,a,o,n,i,l){"use strict";var ie=[];function f(e){var t=(e=K.defaultValue(e,K.defaultValue.EMPTY_OBJECT)).positions,r=e.colors,a=K.defaultValue(e.width,1),o=K.defaultValue(e.colorsPerVertex,!1);this._useDistanceST=K.defaultValue(e.useDistanceST,!1),this._positions=t,this._colors=r,this._width=a,this._colorsPerVertex=o,this._vertexFormat=m.VertexFormat.clone(K.defaultValue(e.vertexFormat,m.VertexFormat.DEFAULT)),this._arcType=K.defaultValue(e.arcType,X.ArcType.GEODESIC),this._granularity=K.defaultValue(e.granularity,te.CesiumMath.RADIANS_PER_DEGREE),this._ellipsoid=Q.Ellipsoid.clone(K.defaultValue(e.ellipsoid,Q.Ellipsoid.WGS84)),this._workerName="createPolylineGeometry";t=1+t.length*Q.Cartesian3.packedLength;t+=K.defined(r)?1+r.length*ee.Color.packedLength:1,this.packedLength=t+Q.Ellipsoid.packedLength+m.VertexFormat.packedLength+5}f.pack=function(e,t,r){var a;r=K.defaultValue(r,0);var o=e._positions,n=o.length;for(t[r++]=n,a=0;a<n;++a,r+=Q.Cartesian3.packedLength)Q.Cartesian3.pack(o[a],t,r);var i=e._colors,n=K.defined(i)?i.length:0;for(t[r++]=n,a=0;a<n;++a,r+=ee.Color.packedLength)ee.Color.pack(i[a],t,r);return Q.Ellipsoid.pack(e._ellipsoid,t,r),r+=Q.Ellipsoid.packedLength,m.VertexFormat.pack(e._vertexFormat,t,r),r+=m.VertexFormat.packedLength,t[r++]=e._width,t[r++]=e._colorsPerVertex?1:0,t[r++]=e._arcType,t[r++]=e._granularity,t[r]=e._useDistanceST,t};var h=Q.Ellipsoid.clone(Q.Ellipsoid.UNIT_SPHERE),C=new m.VertexFormat,v={positions:void 0,colors:void 0,ellipsoid:h,vertexFormat:C,width:void 0,colorsPerVertex:void 0,arcType:void 0,granularity:void 0,useDistanceST:!1};f.unpack=function(e,t,r){t=K.defaultValue(t,0);for(var a=e[t++],o=new Array(a),n=0;n<a;++n,t+=Q.Cartesian3.packedLength)o[n]=Q.Cartesian3.unpack(e,t);var i=0<(a=e[t++])?new Array(a):void 0;for(n=0;n<a;++n,t+=ee.Color.packedLength)i[n]=ee.Color.unpack(e,t);var l=Q.Ellipsoid.unpack(e,t,h);t+=Q.Ellipsoid.packedLength;var s=m.VertexFormat.unpack(e,t,C);t+=m.VertexFormat.packedLength;var p=e[t++],c=1===e[t++],d=e[t++],u=e[t++],y=e[t];return K.defined(r)?(r._positions=o,r._colors=i,r._ellipsoid=Q.Ellipsoid.clone(l,r._ellipsoid),r._vertexFormat=m.VertexFormat.clone(s,r._vertexFormat),r._width=p,r._colorsPerVertex=c,r._arcType=d,r._granularity=u,r._useDistanceST=y,r):(v.positions=o,v.colors=i,v.width=p,v.colorsPerVertex=c,v.arcType=d,v.granularity=u,v.useDistanceST=y,new f(v))};var le=new Q.Cartesian3,se=new Q.Cartesian3,pe=new Q.Cartesian3,ce=new Q.Cartesian3;return f.createGeometry=function(e){var r,a,t=e._width,o=e._vertexFormat,n=e._colors,i=e._colorsPerVertex,l=e._arcType,s=e._granularity,p=e._ellipsoid,c=[],d=Z.arrayRemoveDuplicates(e._positions,Q.Cartesian3.equalsEpsilon,!1,c);if(K.defined(n)&&0<c.length&&(a=c[r=0],n=n.filter(function(e,t){return(i?t!==a&&(0!==t||1!==a):t+1!==a)||(a=c[++r],!1)})),!((P=d.length)<2||t<=0)){if(l===X.ArcType.GEODESIC||l===X.ArcType.RHUMB){var u,y=l===X.ArcType.GEODESIC?(u=te.CesiumMath.chordLength(s,p.maximumRadius),ne.PolylinePipeline.numberOfPoints):(u=s,ne.PolylinePipeline.numberOfPointsRhumbLine),m=ne.PolylinePipeline.extractHeights(d,p);if(K.defined(n)){for(var f=1,h=0;h<P-1;++h)f+=y(d[h],d[h+1],u);var C=new Array(f),v=0;for(h=0;h<P-1;++h){var _=d[h],g=d[h+1],A=n[h],T=y(_,g,u);if(i&&h<f)for(var E=function(e,t,r){var a=ie;a.length=r;var o=e.red,n=e.green,i=e.blue,l=e.alpha,s=t.red,p=t.green,c=t.blue,d=t.alpha;if(ee.Color.equals(e,t)){for(h=0;h<r;h++)a[h]=ee.Color.clone(e);return a}for(var u=(s-o)/r,y=(p-n)/r,m=(c-i)/r,f=(d-l)/r,h=0;h<r;h++)a[h]=new ee.Color(o+h*u,n+h*y,i+h*m,l+h*f);return a}(A,n[h+1],T),b=E.length,D=0;D<b;++D)C[v++]=E[D];else for(D=0;D<T;++D)C[v++]=ee.Color.clone(A)}C[v]=ee.Color.clone(n[n.length-1]),n=C,ie.length=0}d=l===X.ArcType.GEODESIC?ne.PolylinePipeline.generateCartesianArc({positions:d,minDistance:u,ellipsoid:p,height:m}):ne.PolylinePipeline.generateCartesianRhumbArc({positions:d,granularity:u,ellipsoid:p,height:m})}var P,w,x,k,p=4*(P=d.length)-4,V=new Float64Array(3*p),L=new Float64Array(3*p),F=new Float64Array(3*p),G=new Float32Array(2*p),S=o.st?new Float32Array(2*p):void 0,O=K.defined(n)?new Uint8Array(4*p):void 0,R=0,I=0,B=0,U=0,N=[],M=0;if(e._useDistanceST)for(N.push(0),D=1;D<P;++D)M+=Q.Cartesian3.distance(d[D-1],d[D]),N.push(M);for(D=0;D<P;++D){0===D?(Q.Cartesian3.subtract(d[0],d[1],w=le),Q.Cartesian3.add(d[0],w,w)):w=d[D-1],Q.Cartesian3.clone(w,pe),Q.Cartesian3.clone(d[D],se),D===P-1?(Q.Cartesian3.subtract(d[P-1],d[P-2],w=le),Q.Cartesian3.add(d[P-1],w,w)):w=d[D+1],Q.Cartesian3.clone(w,ce),K.defined(O)&&(x=0===D||i?n[D]:n[D-1],D!==P-1&&(k=n[D]));for(var H=D===P-1?2:4,W=0===D?2:0;W<H;++W){Q.Cartesian3.pack(se,V,R),Q.Cartesian3.pack(pe,L,R),Q.Cartesian3.pack(ce,F,R),R+=3;var Y=W-2<0?-1:1;G[I++]=W%2*2-1,G[I++]=Y*t,o.st&&(e._useDistanceST?S[B++]=N[D]/M:S[B++]=D/(P-1),S[B++]=Math.max(G[I-2],0)),K.defined(O)&&(O[U++]=ee.Color.floatToByte((Y=W<2?x:k).red),O[U++]=ee.Color.floatToByte(Y.green),O[U++]=ee.Color.floatToByte(Y.blue),O[U++]=ee.Color.floatToByte(Y.alpha))}}m=new ae.GeometryAttributes;m.position=new re.GeometryAttribute({componentDatatype:te.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:V}),m.prevPosition=new re.GeometryAttribute({componentDatatype:te.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:L}),m.nextPosition=new re.GeometryAttribute({componentDatatype:te.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:F}),m.expandAndWidth=new re.GeometryAttribute({componentDatatype:te.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:G}),o.st&&(m.st=new re.GeometryAttribute({componentDatatype:te.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:S})),K.defined(O)&&(m.color=new re.GeometryAttribute({componentDatatype:te.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:4,values:O,normalize:!0}));var q=oe.IndexDatatype.createTypedArray(p,6*P-6),z=0,J=0,j=P-1;for(D=0;D<j;++D)q[J++]=z,q[J++]=z+2,q[J++]=z+1,q[J++]=z+1,q[J++]=z+2,q[J++]=z+3,z+=4;return new re.Geometry({attributes:m,indices:q,primitiveType:re.PrimitiveType.TRIANGLES,boundingSphere:$.BoundingSphere.fromPoints(d),geometryType:re.GeometryType.POLYLINES})}},function(e,t){return(e=K.defined(t)?f.unpack(e,t):e)._ellipsoid=Q.Ellipsoid.clone(e._ellipsoid),f.createGeometry(e)}});
